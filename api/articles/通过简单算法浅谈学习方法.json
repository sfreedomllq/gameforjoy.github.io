{"title":"通过简单算法浅谈学习方法","slug":"通过简单算法浅谈学习方法","date":"2018-11-24T12:24:01.000Z","updated":"2018-11-24T13:22:44.467Z","comments":true,"path":"api/articles/通过简单算法浅谈学习方法.json","photos":[],"link":"","excerpt":"通过简单算法浅谈学习方法先说两个简单的算法。水仙花数1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>public static void narcissus()&#123;<br>        for (int i=100;i&lt;1000;i++)&#123;<br>            int a = i%10;<br>            int b = i/100;<br>            int c = i%100/10;<br>            if (a*a*a+b*b*b+c*c*c==i)&#123;<br>                System.out.println(i);<br>            &#125;<br>        &#125;<br>    &#125;<br>","covers":null,"content":"<h1 id=\"通过简单算法浅谈学习方法\"><a href=\"#通过简单算法浅谈学习方法\" class=\"headerlink\" title=\"通过简单算法浅谈学习方法\"></a>通过简单算法浅谈学习方法</h1><p>先说两个简单的算法。</p>\n<h3 id=\"水仙花数\"><a href=\"#水仙花数\" class=\"headerlink\" title=\"水仙花数\"></a>水仙花数</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void narcissus()&#123;</span><br><span class=\"line\">        for (int i=100;i&lt;1000;i++)&#123;</span><br><span class=\"line\">            int a = i%10;</span><br><span class=\"line\">            int b = i/100;</span><br><span class=\"line\">            int c = i%100/10;</span><br><span class=\"line\">            if (a*a*a+b*b*b+c*c*c==i)&#123;</span><br><span class=\"line\">                System.out.println(i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n<a id=\"more\"></a>\n<h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void bubbleSort()&#123;</span><br><span class=\"line\">        int a[]=&#123;11,9,4,5,7,2,100,75,46&#125;;</span><br><span class=\"line\">        int temp;</span><br><span class=\"line\">        int count=1;</span><br><span class=\"line\">        for(int i=0;i&lt;a.length-1;i++)&#123;</span><br><span class=\"line\">            for(int j=0;j&lt;a.length-1-i;j++)&#123;</span><br><span class=\"line\">                if(a[j]&gt;a[j+1])&#123;</span><br><span class=\"line\">                    temp = a[j];</span><br><span class=\"line\">                    a[j] = a[j+1];</span><br><span class=\"line\">                    a[j+1] = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        for(int i=0;i&lt;a.length;i++)&#123;</span><br><span class=\"line\">            System.out.println(a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n<p>非常简单的两个算法。大部分人也都满足于知道 “水仙花数”、“冒泡排序”怎么写 这一层面。<br>我并没有说这样不好。但如果你想走的更深一点，该怎么办呢？<br>或者我这样说： 当你弄懂了水仙花数之后，有没有想过四叶玫瑰数？<br>其实水仙花数只是自幂数的一种。自幂数是指一个 n 位数，它的每个位上的数字的 n 次幂之和等于它本身。（例如：当n为3时，有1^3 + 5^3 + 3^3 = 153，153即是n为3时的一个自幂数）<br>自幂数包括：独身数、水仙花数、四叶玫瑰数、五角星数、六合数、北斗七星数、八仙数、九九重阳数、十全十美数 。<br>你问我怎么知道的？我百度的。<br>你可能会不屑的发出一声“切”。但是问题在于，我去百度了，而你没有。<br>好了，现在你知道了十位以内的所有自幂数的称呼，于是你开始去写9个算法来求这些数字。我想问的是：不觉得这样做很无趣吗？<br>程序是用来方便人类的，既然它们都叫自幂数，就不能写个程序，根据输入的位数，输出相应的自幂数吗？比如我输入7，就会输出所有的北斗七星数。<br>于是同样是对一个水仙花数，我写了以下的算法：</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static int powerNumber(int number)&#123;</span><br><span class=\"line\">        int count=0;</span><br><span class=\"line\">        if(number==2)&#123;</span><br><span class=\"line\">            System.out.println(&quot;No number matched.&quot;);</span><br><span class=\"line\">        &#125;else if(number==1)&#123;</span><br><span class=\"line\">            for(int i=0;1&lt;10;i++)&#123;</span><br><span class=\"line\">                if(Math.pow(i,1)==i)&#123;</span><br><span class=\"line\">                    System.out.println(i);</span><br><span class=\"line\">                    count++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            for(int i=(int) Math.pow(10,number-1);i&lt;Math.pow(10,number);i++)&#123;</span><br><span class=\"line\">                int x=0;</span><br><span class=\"line\">                for(int m=1;m&lt;=number;m++)&#123;</span><br><span class=\"line\">                    int y=(int) (i/(Math.pow(10,m-1))%10);</span><br><span class=\"line\">                    x=(int) (x+Math.pow(y, number));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if(x==i)&#123;</span><br><span class=\"line\">                    count++;</span><br><span class=\"line\">                    System.out.println(i);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return count;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n<p>然后你会发现这个程序虽然实现了功能，但交互一点都不友好，只会输出符合条件的自幂数和个数，而且名称都没说明。 那么你可以加上一些判断：</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (number == 4)</span><br><span class=\"line\">    System.out.println(&quot;四叶玫瑰数有：&quot;);</span><br></pre></td></tr></table></figure></div>\n<p>类似这样。<br>到这里，你可能会觉得这个程序已经很不错了。其实还有值得优化的地方，比如说：当我输入9，想要输出所有的“九九重阳数”的时候发现，过了很久，一两分钟，也只才输出了第一个数字，而我知道“九九重阳数”有4个。是程序出错了吗？不，只是计算量太大了，需要一些执行时间。但是用户并不知道这些，他只会觉得这是个什么烂程序，跑了这么久都给不出完整的答案。所以问题又来了：在不考虑改动算法的前提下，这该怎么解决？当然我有我的解决办法，只是我不想说，我想听听你们的想法。</p>\n<p>再来说冒泡排序。<br>众所周知冒泡排序的执行次数是参与排序的数字个数-1。那么有没有人想过用更少的循环次数去完成冒泡排序？或者说，有没有想过还有哪些排序算法？那些方法的逻辑思维是什么样的？<br>这里我就不多说了，网上文章太多，自行百度吧。</p>\n<p>其实我想说的就是四个字：发散思维。要学会举一反三。这也是为什么我在博文中一再强调：思想才是最重要的。<br>有了思想，再谈操作。</p>\n","categories":[{"name":"杂谈","slug":"杂谈","count":1,"path":"api/categories/杂谈.json"}],"tags":[{"name":"学习方法","slug":"学习方法","count":1,"path":"api/tags/学习方法.json"}]}